// ITC 155 JAVA 2 CLASS
// SPRING QUARTER 2018
// 2018_04_11
// Aaron Lewis
// 
// Assignment 01:
// In Java, via Eclipse.
// Place on github.com
// Submit on CANVAS the URL of assignment on github.com 
// 
// 123456789 123456789 123456789 123456789 123456789 123456789 
// 
// 
// Write a program that uses the DrawingPanel to draw Figure 
// #G.21.
// 
// The window is 200 pixels wide and 150 pixels tall.  The 
// background is yellow.  There are two blue ovals of size 40x40 
// pixels.  They are 80 pixels apart, and the left oval's top-left 
// corner is located at position (50,25).  There is a red sqaure 
// whose top two corners exactly intersect the centers of the two 
// ovals.  Lastly, there is a black horizontal line through the 
// center of the square.

		// 2.  blue oval left
		g.setColor(Color.BLUE); // color of left oval
		g.fillOval( 50, 25, 40, 40);


// 
//         ORDER:
// 1.  yellow background
// 2.  blue oval left
// 3.  blue oval right
// 4.  red square over both ovals
// 5.  black horizontal line over red square
// 
// 
// 
// 

// ITC 155 JAVA 2 CLASS
// SPRING QUARTER 2018
// 2018_04_11
// Aaron Lewis
// 
// Assignment 01:
// In Java, via Eclipse.
// Place on github.com
// Submit on CANVAS the URL of assignment on github.com 
// 
// 123456789 123456789 123456789 123456789 123456789 123456789 
// 
// 
// Write a program that uses the DrawingPanel to draw Figure 
// #G.21.
// 
// The window is 200 pixels wide and 150 pixels tall.  The 
// background is yellow.  There are two blue ovals of size 40x40 
// pixels.  They are 80 pixels apart, and the left oval's top-left 
// corner is located at position (50,25).  There is a red sqaure 
// whose top two corners exactly intersect the centers of the two 
// ovals.  Lastly, there is a black horizontal line through the 
// center of the square.
// 
//         ORDER:
// 1.  yellow background
// 2.  blue oval left
// 3.  blue oval right
// 4.  red square over both ovals
// 5.  black horizontal line over red square
// 
// 
// 
// 

import java.awt.Color;
import java.awt.Graphics;





public class Java2_Assignment01 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		DrawingPanel panel = new DrawingPanel(200, 150); // size measured in pixels
		
		
		// 3.  blue oval right
		// They are 80 pixels apart
		// 50 + 40 + 80 = 170
		g.setColor(Color.BLUE); // color of left oval
		g.fillOval(170, 25, 40, 40);
		
		// 4.  red square over both ovals
		// whose top two corners exactly intersect 
		// the centers of the two ovals
		//     center would 20, 20 in width & height
		// LEFT CORNER:  left oval at start 50, 25
		//    upper left anchor point start for 
		// square calculation below
		// so, center would be 50+20=70 for x
		// so, center would be 25+20=45 for y
		//
		// RIGHT CORNER:  left oval at start 50, 25
		//    upper left anchor point start for
		// g.fillOval(170, 25, 40, 40);
		// square calculation below
		// so, center would be 170-20=150 for x
		// so, center would be  25+20= 45 for y
		//     now, 150(for x2) - 70(for x1) = 80 x wide
		//       = 80 y tall

		
		g.setColor(Color.RED); // color of square
		g.fillRect(150, 45, 80, 80);
		
		// 5.  black horizontal line over red square
		g.setColor(Color.BLACK); // color of left oval
		//g.drawLine( 10, 30, 100, 50);
		
		
	}

}


